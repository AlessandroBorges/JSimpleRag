<?xml version="1.0" encoding="UTF-8"?>
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
                   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                   xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog
                   http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-4.3.xsd">

    <!--
    NOTE: PostgreSQL ENUMs vs Java ENUMs

    Why keep both?
    1. Database-level validation: Protects against direct SQL inserts/updates
    2. Performance: PostgreSQL stores enums as integers internally
    3. Schema documentation: Self-documenting database schema
    4. Multi-app support: If other apps access the DB, they get validation too
    5. Type safety: Strong typing at the database level

    Trade-off:
    - Requires synchronization between Java and PostgreSQL enums
    - Adding new enum values requires ALTER TYPE migration

    These enums MUST match their Java counterparts:
    - tipo_embedding → bor.tools.simplerag.entity.enums.TipoEmbedding
    - tipo_conteudo → bor.tools.simplerag.entity.enums.TipoConteudo
    - tipo_secao → bor.tools.simplerag.entity.enums.TipoSecao
    - tipo_biblioteca → bor.tools.simplerag.entity.enums.TipoBiblioteca
    - tipo_associacao → bor.tools.simplerag.entity.enums.TipoAssociacao
    -->

    <changeSet id="002-create-tipo-embedding-enum" author="jsimplerag">
        <sql>
            CREATE TYPE tipo_embedding AS ENUM (
                'documento',
                'capitulo',
                'trecho',
                'perguntas_respostas',
                'resumo',
                'metadados',
                'outros'
            );
        </sql>
        <rollback>
            DROP TYPE IF EXISTS tipo_embedding;
        </rollback>
    </changeSet>

    <changeSet id="002-create-tipo-conteudo-enum" author="jsimplerag">
        <sql>
            CREATE TYPE tipo_conteudo AS ENUM ('constituicao', 
            									'lei', 
            									'decreto', 
            									'sumula', 
            									'acordao', 
            									'instrucao_normativa', 
            									'portaria', 
            									'normativo', 
            									'tese', 
            									'artigo', 
            									'livro', 
            									'relatorio', 
            									'nota_tecnica', 
            									'nota_auditoria', 
            									'manual', 
            									'papel_trabalho', 
            									'resumo', 
            									'wiki', 
            									'projeto',
            									'documento_interno',
            									'outros');
        </sql>
        <rollback>
            DROP TYPE IF EXISTS tipo_conteudo;
        </rollback>
    </changeSet>

    <changeSet id="002-create-tipo-secao-enum" author="jsimplerag">
        <sql>
             CREATE TYPE tipo_secao AS ENUM (
                'cabecalho',
                'ementa',
                'sumario',
                'introducao',
                'planejamento',
                'metodologia',
                'desenvolvimento',
                'achados',
                'demonstrativo',
                'recomendacoes',
                'ressalvas_divergencias',
                'conclusao',
                'relatorio',
                'voto',
                'decisao',
                'referencias_bibliografias',
                'anexo',
                'outros'
            );
        </sql>
        <rollback>
            DROP TYPE IF EXISTS tipo_secao;
        </rollback>
    </changeSet>

    <changeSet id="002-create-tipo-biblioteca-enum" author="jsimplerag">
        <sql>
            CREATE TYPE tipo_biblioteca AS ENUM (
                'compartilhada',
                'pessoal',
                'chat',
                'projeto'
            );
        </sql>
        <rollback>
            DROP TYPE IF EXISTS tipo_biblioteca;
        </rollback>
    </changeSet>

    <changeSet id="002-create-tipo-associacao-enum" author="jsimplerag">
        <sql>
            CREATE TYPE tipo_associacao AS ENUM (
                'proprietario',
                'colaborador',
                'leitor'
            );
        </sql>
        <rollback>
            DROP TYPE IF EXISTS tipo_associacao;
        </rollback>
    </changeSet>

</databaseChangeLog>